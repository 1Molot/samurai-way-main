{"version":3,"file":"static/js/168.d8c1ec95.chunk.js","mappings":"8OACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCehL,EAPmB,SAACA,GAChB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAASC,UAC7CC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIR,EAAKK,SAAA,CAAEN,EAAMU,KAAK,QAEvC,ECFA,EAJgB,SAACV,GACb,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAASC,SAAEN,EAAMW,SAC5C,E,uCCoBaC,GAAsBC,EAAAA,EAAAA,GAA+B,CAACC,KAAK,wBAArCD,EArB4C,SAACb,GAE5E,IAAMe,GAA0BC,EAAAA,EAAAA,UAAQ,kBAChCC,EAAAA,EAAAA,GAAiB,GAAG,GACtB,IAEN,OACIV,EAAAA,EAAAA,MAAA,QAAMW,SAAUlB,EAAMmB,aAAab,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACFC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAST,GACpBL,KAAM,iBACNe,YAAa,0BAErBtB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAS,aAIzB,ICGA,EAxBgB,SAACN,GAEb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OAAI5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACtB,KAAMqB,EAAOrB,KAAsBR,GAAI6B,EAAO7B,IAAtB6B,EAAO7B,GAAoB,IAC7G+B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAnB,GAAO,OAAIR,EAAAA,EAAAA,KAACgC,EAAO,CAACxB,QAASA,EAAQA,SAAcA,EAAQT,GAAK,IAM1G,OACIK,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,QAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAeC,SAC1BsB,KAELzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAWC,UACvBH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2B,OAEV9B,EAAAA,EAAAA,KAACS,EAAmB,CAACM,SAZT,SAACkB,GACjBpC,EAAMqC,WAAWD,EAAOE,eAC5B,MAaJ,E,mBChBWC,EAAqB,SAACC,GAC7B,MAAO,CACHH,WAAY,SAACC,GACTE,GAASC,EAAAA,EAAAA,IAAkBH,GAC/B,EAER,EAIA,GAAeI,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,GAY6BY,GAD7B,CAGEK,E","sources":["webpack://react-way-of-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__+13Cb\",\"dialogsItems\":\"Dialogs_dialogsItems__w8ndP\",\"active\":\"Dialogs_active__FzRlu\",\"messages\":\"Dialogs_messages__eSsCO\",\"message\":\"Dialogs_message__nGwfn\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogsItemPropsType = {\r\n    id: number | string\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemPropsType) => {\r\n    let path = \"/dialogs/1\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name} </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React, {useMemo} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nexport type MessageFormDataType = {\r\n    newMessageBody:string\r\n}\r\n\r\nexport const AddMessageForm:React.FC<InjectedFormProps<MessageFormDataType>> = (props) => {\r\n\r\n    const maxLengthCreatorWrapper = useMemo(() =>\r\n            maxLengthCreator(50)\r\n        , []);\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required,maxLengthCreatorWrapper]}\r\n                    name={\"newMessageBody\"}\r\n                    placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button >Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<MessageFormDataType>({form:\"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageFormRedux, MessageFormDataType} from \"./AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n    let addNewMessage = (values:MessageFormDataType) => {\r\n        props.sedMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {sedMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nexport let mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        sedMessage: (newMessageBody:string) => {\r\n            dispatch(sedMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport type DialogsPropsType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // WithAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","_jsx","className","s","children","_jsxs","NavLink","to","name","message","AddMessageFormRedux","reduxForm","form","maxLengthCreatorWrapper","useMemo","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","DialogItem","messagesElements","messages","Message","values","sedMessage","newMessageBody","mapDispatchToProps","dispatch","sedMessageCreator","compose","connect","Dialogs"],"sourceRoot":""}